<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zujuan.mapper.ExaminationMapper">
  <resultMap id="BaseResultMap" type="com.zujuan.pojo.Examination">
    <id column="eid" jdbcType="BIGINT" property="eid" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="option_json" jdbcType="VARCHAR" property="optionJson" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="degree" jdbcType="DOUBLE" property="degree" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="know_id" jdbcType="BIGINT" property="knowId" />
  </resultMap>

<!--根据条件进行分页搜索-->
  <select id="listByConditionPage" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from examination
    <trim prefix="WHERE" prefixOverrides="and" suffixOverrides="and">
    <if test="examination.question != null">
      question  LIKE CONCAT('%',#{examination.question},'%') and
    </if>
    <if test="examination.type != null">
      type = #{examination.type} and
    </if>
    <if test="examination.degree != null">
      degree = #{examination.degree} and
    </if>
    <if test="ids != null">
      know_id IN
      <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>
      and
    </if>
      <if test="notInIds != null">
      eid NOT IN
      <foreach collection="notInIds" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>

    </if>
    </trim>
    limit #{start},#{limit}
  </select>

  <!--根据条件进行分页搜索总条数-->
  <select id="countByConditionPage" parameterType="java.util.HashMap" resultType="java.lang.Long">
    select
    COUNT(1)
    from examination
    <trim prefix="WHERE" prefixOverrides="and" suffixOverrides="and">
    <if test="examination.question != null">
      question  LIKE CONCAT('%',#{examination.question},'%')
    </if>
    <if test="examination.type != null">
      and type = #{examination.type}
    </if>
    <if test="examination.degree != null">
      and degree = #{examination.degree}
    </if>
    <if test="ids != null">
      and know_id IN
      <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>

    </if>
    <if test="notInIds != null">
      and eid NOT IN
      <foreach collection="notInIds" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>

    </if>
    </trim>
  </select>


  <select id="list" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from examination
    limit #{start},#{limit}
  </select>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    eid, question, option_json, answer, img_url, degree, type, know_id
  </sql>
  <select id="selectByExample" parameterType="com.zujuan.pojo.ExaminationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from examination
    where eid = #{eid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from examination
    where eid = #{eid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zujuan.pojo.ExaminationExample">
    delete from examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zujuan.pojo.Examination">
    insert into examination (eid, question, option_json, 
      answer, img_url, degree, 
      type, know_id)
    values (#{eid,jdbcType=BIGINT}, #{question,jdbcType=VARCHAR}, #{optionJson,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{degree,jdbcType=DOUBLE}, 
      #{type,jdbcType=INTEGER}, #{knowId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zujuan.pojo.Examination">
    insert into examination
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="optionJson != null">
        option_json,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="knowId != null">
        know_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=BIGINT},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="optionJson != null">
        #{optionJson,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="knowId != null">
        #{knowId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zujuan.pojo.ExaminationExample" resultType="java.lang.Long">
    select count(*) from examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update examination
    <set>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=BIGINT},
      </if>
      <if test="record.question != null">
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.optionJson != null">
        option_json = #{record.optionJson,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null">
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.knowId != null">
        know_id = #{record.knowId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update examination
    set eid = #{record.eid,jdbcType=BIGINT},
      question = #{record.question,jdbcType=VARCHAR},
      option_json = #{record.optionJson,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=INTEGER},
      know_id = #{record.knowId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zujuan.pojo.Examination">
    update examination
    <set>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="optionJson != null">
        option_json = #{optionJson,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="knowId != null">
        know_id = #{knowId,jdbcType=BIGINT},
      </if>
    </set>
    where eid = #{eid,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.zujuan.pojo.Examination">
    update examination
    set option_json = #{optionJson,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      know_id = #{knowId,jdbcType=BIGINT}
    where eid = #{eid,jdbcType=BIGINT}
  </update>
</mapper>